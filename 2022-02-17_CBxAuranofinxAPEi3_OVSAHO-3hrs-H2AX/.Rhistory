#install.packages("readr")
#install.packages("dplyr")
#install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
library(car)
library(lattice)
library(dplyr)
library(forcats)
# processed raw output file from ImageExpress Pico with Perl script
# to pad zeros of well number (01 instead of 1)
# and maps experiment conditions to wells (rows and column labels)
table <- read.csv("labeledData.csv")
unique(table$condition)
unique(table$row)
unique(table$column)
hist(table$NucAvg2, breaks=1000)
table <- table[table$NucAvg2 <= 400, ]
hist(table$NucAvg2, breaks=1000)
table <- table[table$NucAvg2 <= 350, ]
hist(table$NucAvg2, breaks=1000)
hist(table$NucAvg3, breaks=1000)
hist(table$NucAvg1, breaks=1000)
hist(table$NucAvg1, breaks=1000)
hist(table$NucAvg2, breaks=1000)
hist(table$NucArea, breaks=1000)
table <- table[table$NucArea <= 250, ]
hist(table$NucArea, breaks=1000)
table <- table[table$NucArea <= 230, ]
hist(table$NucArea, breaks=1000)
unique(table$condition)
table$ordered <-
factor(table$condition,
levels = c( # unique(table$condition) into file.txt and run convert-list.pl on file.txt
"cntl_cntl",
"cntl_AF",
"CB_AF",
"cntl_APEi",
"CB_APEi"
))
table <- table %>% filter(!is.na(ordered)) # remove rows that are not in specified levels
# x-y scatterplot with siCntl vs siRad51 shown as two colors
ggplot(ordered, aes(x=NucArea, y=NucAvg2)) + geom_point()
# x-y scatterplot with siCntl vs siRad51 shown as two colors
ggplot(table$ordered, aes(x=NucArea, y=NucAvg2)) + geom_point()
# x-y scatterplot with siCntl vs siRad51 shown as two colors
ggplot(table, aes(x=NucArea, y=NucAvg2)) + geom_point()
# x-y scatterplot shown as two colors
ggplot(table, aes(x=NucArea, y=NucAvg2, color=table$condition)) + geom_point()
ggplot(table, aes(x=ordered,y=NucArea)) +
geom_violin()
ggplot(table, aes(x=ordered,y=NucAvg2)) +
geom_violin()
ggplot(table, aes(x=ordered,y=NucAvg2)) +
geom_violin() +
stat_summary(
mapping = aes(x = ordered, y = repair),
fun.min = function(z) { quantile(z,0.25) },
fun.max = function(z) { quantile(z,0.75) },
fun = median) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
ggplot(table, aes(x=ordered,y=NucAvg2)) +
geom_violin() +
stat_summary(
mapping = aes(x = ordered, y = NucAvg2),
fun.min = function(z) { quantile(z,0.25) },
fun.max = function(z) { quantile(z,0.75) },
fun = median) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))
